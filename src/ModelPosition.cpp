//
// Academic License - for use in teaching, academic research, and meeting
// course requirements at degree granting institutions only.  Not for
// government, commercial, or other organizational use.
// File: ModelPosition.cpp
//
// MATLAB Coder version            : 5.1
// C/C++ source code generated on  : 12-Mar-2022 21:00:26
//

// Include Files
#include "ModelPosition.h"
#include <cmath>

// Function Definitions
//
// Arguments    : void
// Return Type  : void
//
ModelPosition::ModelPosition()
{
}

//
// Arguments    : void
// Return Type  : void
//
ModelPosition::~ModelPosition()
{
  // (no terminate code required)
}

//
// MODEL_X_BEFORRE_GRIPPER
//     PBGRIPPER = MODEL_X_BEFORRE_GRIPPER(Q1,Q2,Q3,Q4,Q5,Q6,Q7)
// Arguments    : double q1
//                double q2
//                double q3
//                double q4
//                double q5
//                double q6
//                double q7
//                double Pbgripper[3]
// Return Type  : void
//
void ModelPosition::model_X_beforre_gripper(double q1, double q2, double q3,
  double q4, double q5, double q6, double, double Pbgripper[3])
{
  double Pbgripper_tmp;
  double b_Pbgripper_tmp;
  double c_Pbgripper_tmp;
  double d_Pbgripper_tmp;
  double t10;
  double t11;
  double t12;
  double t13;
  double t14;
  double t15;
  double t19;
  double t2;
  double t20;
  double t3;
  double t4;
  double t5;
  double t6;
  double t7;
  double t8;
  double t9;

  //     This function was generated by the Symbolic Math Toolbox version 8.6.
  //     11-Mar-2022 16:42:38
  t2 = std::cos(q1);
  t3 = std::cos(q2);
  t4 = std::cos(q3);
  t5 = std::cos(q4);
  t6 = std::cos(q5);
  t7 = std::cos(q6);
  t8 = std::sin(q1);
  t9 = std::sin(q2);
  t10 = std::sin(q3);
  t11 = std::sin(q4);
  t12 = std::sin(q5);
  t13 = std::sin(q6);
  t14 = t2 * t10;
  t15 = t8 * t10;
  t19 = t14 + t3 * t4 * t8;
  t20 = t15 + -(t2 * t3 * t4);
  Pbgripper_tmp = t2 * t9;
  b_Pbgripper_tmp = t4 * t8;
  t14 *= t3;
  c_Pbgripper_tmp = t11 * t20;
  d_Pbgripper_tmp = t2 * t5 * t9;
  Pbgripper[0] = ((((((t8 * -0.0118 - t13 * (t6 * (t5 * t20 + Pbgripper_tmp *
    t11) + t12 * (b_Pbgripper_tmp + t14)) * 0.1674) - t7 * (c_Pbgripper_tmp -
    d_Pbgripper_tmp) * 0.1674) + Pbgripper_tmp * 0.4208) - b_Pbgripper_tmp *
                    0.0128) - t14 * 0.0128) - c_Pbgripper_tmp * 0.3143) +
    d_Pbgripper_tmp * 0.3143;
  Pbgripper_tmp = t2 * t4;
  b_Pbgripper_tmp = t8 * t9;
  t14 = t3 * t15;
  c_Pbgripper_tmp = t11 * t19;
  d_Pbgripper_tmp = t5 * t8 * t9;
  Pbgripper[1] = ((((((t2 * -0.0118 - t13 * (t6 * (t5 * t19 - b_Pbgripper_tmp *
    t11) + t12 * (Pbgripper_tmp - t14)) * 0.1674) - t7 * (c_Pbgripper_tmp +
    d_Pbgripper_tmp) * 0.1674) - Pbgripper_tmp * 0.0128) - b_Pbgripper_tmp *
                    0.4208) + t14 * 0.0128) - c_Pbgripper_tmp * 0.3143) -
    d_Pbgripper_tmp * 0.3143;
  Pbgripper_tmp = t3 * t5;
  b_Pbgripper_tmp = t9 * t10;
  t14 = t4 * t9 * t11;
  Pbgripper[2] = (((((t3 * 0.4208 - t13 * (t6 * (t3 * t11 + t4 * t5 * t9) -
    b_Pbgripper_tmp * t12) * 0.1674) + t7 * (Pbgripper_tmp - t14) * 0.1674) +
                    Pbgripper_tmp * 0.3143) + b_Pbgripper_tmp * 0.0128) - t14 *
                  0.3143) + 0.2848;
}

//
// File trailer for ModelPosition.cpp
//
// [EOF]
//
