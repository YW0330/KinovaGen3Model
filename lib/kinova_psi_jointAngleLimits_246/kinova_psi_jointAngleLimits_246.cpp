//
// Academic License - for use in teaching, academic research, and meeting
// course requirements at degree granting institutions only.  Not for
// government, commercial, or other organizational use.
//
// kinova_psi_jointAngleLimits_246.cpp
//
// Code generation for function 'kinova_psi_jointAngleLimits_246'
//

// Include files
#include "kinova_psi_jointAngleLimits_246.h"

// Function Definitions
void kinova_psi_jointAngleLimits_246(double q2, double q4, double q6,
                                     double q2max, double q4max, double q6max,
                                     double q2min, double q4min, double q6min,
                                     double psi2[7])
{
  double psi2_tmp;
  double t16;
  double t17;
  double t18;
  double t19;
  // KINOVA_PSI_JOINTANGLELIMITS_246
  //     PSI2 =
  //     KINOVA_PSI_JOINTANGLELIMITS_246(Q2,Q4,Q6,Q2MIN,Q2MAX,Q4MIN,Q4MAX,Q6MIN,Q6MAX)
  //     This function was generated by the Symbolic Math Toolbox version 8.7.
  //     16-Jun-2023 12:47:07
  t16 = q4 + -q4min;
  t17 = q4 + -q4max;
  t18 = q6 + -q6min;
  t19 = q6 + -q6max;
  psi2[0] = 0.0;
  psi2_tmp = 1.0 / q2min * (1.0 / q2max) * (1.0 / q4min) * (1.0 / q4max) *
             (1.0 / q6min) * (1.0 / q6max);
  psi2[1] = psi2_tmp * t16 * t17 * t18 * t19 * ((q2 * -2.0 + q2min) + q2max);
  psi2[2] = 0.0;
  psi2_tmp = psi2_tmp * (q2 + -q2min) * (q2 + -q2max);
  psi2[3] = psi2_tmp * t18 * t19 * ((q4 * -2.0 + q4min) + q4max);
  psi2[4] = 0.0;
  psi2[5] = psi2_tmp * t16 * t17 * ((q6 * -2.0 + q6min) + q6max);
  psi2[6] = 0.0;
}

// End of code generation (kinova_psi_jointAngleLimits_246.cpp)
